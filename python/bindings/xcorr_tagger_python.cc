/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(xcorr_tagger.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6461b6f3d1387b929d76f83b65be9915)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <xfdm_sync/xcorr_tagger.h>
// pydoc.h is automatically generated in the build directory
#include <xcorr_tagger_pydoc.h>

void bind_xcorr_tagger(py::module& m)
{

    using xcorr_tagger = gr::xfdm_sync::xcorr_tagger;


    py::class_<xcorr_tagger,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<xcorr_tagger>>(m, "xcorr_tagger", D(xcorr_tagger))

        .def(py::init(&xcorr_tagger::make),
             py::arg("threshold"),
             py::arg("sync_sequence"),
             py::arg("use_sc_rot"),
             py::arg("tag_key") = "frame_start",
             D(xcorr_tagger, make))

        .def("set_threshold", &xcorr_tagger::set_threshold, py::arg("threshold"))
        .def("sync_sequence", &xcorr_tagger::sync_sequence)


        ;
}
