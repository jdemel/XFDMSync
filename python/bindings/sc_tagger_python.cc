/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(sc_tagger.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f7e612052916dce4a8acf8c0caa9787a)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <xfdm_sync/sc_tagger.h>
// pydoc.h is automatically generated in the build directory
#include <sc_tagger_pydoc.h>

void bind_sc_tagger(py::module& m)
{

    using sc_tagger = gr::xfdm_sync::sc_tagger;


    py::class_<sc_tagger,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<sc_tagger>>(m, "sc_tagger", D(sc_tagger))

        .def(py::init(&sc_tagger::make),
             py::arg("thres_low"),
             py::arg("thres_high"),
             py::arg("seq_len"),
             py::arg("tag_key") = "frame_start",
             D(sc_tagger, make))

        .def("set_threshold_low", &sc_tagger::set_threshold_low, py::arg("threshold"))
        .def("set_threshold_high", &sc_tagger::set_threshold_high, py::arg("threshold"))

        ;
}
