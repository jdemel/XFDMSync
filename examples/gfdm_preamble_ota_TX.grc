options:
  parameters:
    author: Johannes Demel
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: gfdm_preamble_ota_TX
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Zadoff Chu OTA Demo
    window_size: 3840,2160
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [23, 19]
    rotation: 0
    state: enabled

blocks:
- name: full_preamble
  id: variable
  parameters:
    comment: ''
    value: data_reference.full_preamble
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 36.0]
    rotation: 0
    state: enabled
- name: reference_data
  id: variable
  parameters:
    comment: ''
    value: data_reference.reference
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 100.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 200e6 / 64 * 2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 124]
    rotation: 0
    state: enabled
- name: tfreq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ctrl_tab@0:0,0,1,1
    label: Carrier Frequency
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: 2.4e9
    step: '1'
    stop: 3.8e9
    value: 2.484e9
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 180.0]
    rotation: 0
    state: enabled
- name: tgain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ctrl_tab@0:1,0,1,1
    label: TX gain
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '70'
    value: '20.'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 180.0]
    rotation: 0
    state: enabled
- name: blocks_vector_insert_x_0
  id: blocks_vector_insert_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    period: '4096'
    type: complex
    vector: '[0, ] * (4096 - len(reference_data))'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 212.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: complex
    vector: reference_data
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 212]
    rotation: 0
    state: enabled
- name: ctrl_tab
  id: qtgui_tab_widget
  parameters:
    alias: ''
    comment: ''
    gui_hint: 0,4,1,1
    label0: Control
    label1: Tab 1
    label10: Tab 10
    label11: Tab 11
    label12: Tab 12
    label13: Tab 13
    label14: Tab 14
    label15: Tab 15
    label16: Tab 16
    label17: Tab 17
    label18: Tab 18
    label19: Tab 19
    label2: Tab 2
    label3: Tab 3
    label4: Tab 4
    label5: Tab 5
    label6: Tab 6
    label7: Tab 7
    label8: Tab 8
    label9: Tab 9
    num_tabs: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 116.0]
    rotation: 0
    state: enabled
- name: data_reference
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "# this module will be imported in the into your flowgraph\nimport\
      \ numpy as np\nfrom gfdm.pygfdm import mapping\nfrom gfdm.pygfdm import utils\n\
      from gfdm.pygfdm import preamble as pre_module\nfrom gfdm.pygfdm.gfdm_modulation\
      \ import modulate_mapped_gfdm_block\nfrom gfdm.pygfdm.cyclic_prefix import add_cyclic_starfix,\
      \ get_raised_cosine_ramp, pinch_block, get_window_len\n\n\ndef generate_payload(timeslots=9,\
      \ subcarriers=64, active_subcarriers=52, overlap=2, cp_len=16, ramp_len=8):\n\
      \    cs_len = ramp_len\n    seed = utils.generate_seed('awesome frame')\n  \
      \  d = utils.get_random_qpsk(timeslots * active_subcarriers, seed)\n    frame\
      \ = modulate_mapped_gfdm_block(d, timeslots, subcarriers, active_subcarriers,\
      \ overlap, .2, dc_free=True)\n    symbol = add_cyclic_starfix(frame, cp_len,\
      \ cs_len)\n    window_ramp = get_raised_cosine_ramp(cs_len, get_window_len(cp_len,\
      \ timeslots, subcarriers, cs_len))\n    return pinch_block(symbol, window_ramp)\n\
      \n\ndef generate_preambles(subcarriers=64, active_subcarriers=52, overlap=2,\
      \ cp_len=16, ramp_len=8):\n    subcarrier_map = mapping.get_subcarrier_map(subcarriers,\
      \ active_subcarriers, dc_free=True)\n    seed = utils.generate_seed('awesome\
      \ preamble')\n    preambles = pre_module.mapped_preamble(seed, 'rrc', .2, active_subcarriers,\
      \ subcarriers, subcarrier_map, overlap, cp_len, ramp_len)\n    return preambles\n\
      \npreambles = generate_preambles()\nfull_preamble = preambles[0]\ncore_preamble\
      \ = preambles[1]\n\nprint(full_preamble.size)\nprint(core_preamble.size)\n\n\
      payload = generate_payload()\n\nreference = np.concatenate((full_preamble, payload))\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 44.0]
    rotation: 0
    state: true
- name: import_numpy
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 28]
    rotation: 0
    state: enabled
- name: uhd_usrp_sink_0_0
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: TX/RX
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: tfreq
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: '0.0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: '"name=kermit"'
    dev_args: '""'
    gain0: tgain
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    len_tag_name: ''
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    norm_gain0: 'False'
    norm_gain1: 'False'
    norm_gain10: 'False'
    norm_gain11: 'False'
    norm_gain12: 'False'
    norm_gain13: 'False'
    norm_gain14: 'False'
    norm_gain15: 'False'
    norm_gain16: 'False'
    norm_gain17: 'False'
    norm_gain18: 'False'
    norm_gain19: 'False'
    norm_gain2: 'False'
    norm_gain20: 'False'
    norm_gain21: 'False'
    norm_gain22: 'False'
    norm_gain23: 'False'
    norm_gain24: 'False'
    norm_gain25: 'False'
    norm_gain26: 'False'
    norm_gain27: 'False'
    norm_gain28: 'False'
    norm_gain29: 'False'
    norm_gain3: 'False'
    norm_gain30: 'False'
    norm_gain31: 'False'
    norm_gain4: 'False'
    norm_gain5: 'False'
    norm_gain6: 'False'
    norm_gain7: 'False'
    norm_gain8: 'False'
    norm_gain9: 'False'
    num_mboards: '1'
    otw: ''
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    stream_args: ''
    stream_chans: '[]'
    sync: none
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 164.0]
    rotation: 0
    state: enabled

connections:
- [blocks_vector_insert_x_0, '0', uhd_usrp_sink_0_0, '0']
- [blocks_vector_source_x_0, '0', blocks_vector_insert_x_0, '0']

metadata:
  file_format: 1
